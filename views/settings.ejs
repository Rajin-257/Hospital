<%- include('./partials/header') %>
<%- include('./partials/navbar') %>

<div class="container my-4">
    <div class="row">
        <div class="col-lg-12">
            <div class="card shadow">
                <div class="card-header bg-primary ">
                    <h5 class="mb-0 text-white"><i class="fas fa-cog me-2"></i>Hospital Settings</h5>
                </div>
                
                <div class="card-body">
                    <% if (message) { %>
                        <div class="alert alert-success alert-dismissible fade show">
                            <%= message %>
                            <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
                        </div>
                    <% } %>
                    
                    <% if (error) { %>
                        <div class="alert alert-danger alert-dismissible fade show">
                            <%= error %>
                            <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
                        </div>
                    <% } %>
                    <p class="text-danger">Before importing feature permissions and Test Data please ensure that the Your General Settings are set.</p>
                    
                    <!-- Tab navigation -->
                    <ul class="nav nav-tabs mb-4" id="settingsTabs" role="tablist">
                        <li class="nav-item" role="presentation">
                            <button class="nav-link active" id="general-tab" data-bs-toggle="tab" data-bs-target="#general" type="button" role="tab" aria-controls="general" aria-selected="true">
                                <i class="fas fa-info-circle me-2"></i>General Settings
                            </button>
                        </li>
                        <% if (locals.isFeatureVisible('Permission Management')) { %>
                        <li class="nav-item" role="presentation">
                            <button class="nav-link" id="permissions-tab" data-bs-toggle="tab" data-bs-target="#permissions" type="button" role="tab" aria-controls="permissions" aria-selected="false">
                                <i class="fas fa-lock me-2"></i>Feature Permissions
                            </button>
                        </li>
                        <% } %>
                        <li class="nav-item" role="presentation">
                            <button class="nav-link" id="print-template-tab" data-bs-toggle="tab" data-bs-target="#print-template" type="button" role="tab" aria-controls="print-template" aria-selected="false">
                                <i class="fas fa-print me-2"></i>Print Template
                            </button>
                        </li>
                    </ul>
                    
                    <!-- Tab content -->
                    <div class="tab-content" id="settingsTabsContent">
                        <!-- General Settings Tab -->
                        <div class="tab-pane fade show active" id="general" role="tabpanel" aria-labelledby="general-tab">
                            <form action="/settings" method="POST" enctype="multipart/form-data">
                                <div class="row mb-3">
                                    <div class="col-md-6">
                                        <label for="medical_name" class="form-label">Medical Facility Name *</label>
                                        <input 
                                            type="text" 
                                            class="form-control" 
                                            id="medical_name" 
                                            name="medical_name" 
                                            value="<%= settings.medical_name || '' %>" 
                                            required
                                        >
                                    </div>
                                    <div class="col-md-6">
                                        <label for="email" class="form-label">Email Address</label>
                                        <input 
                                            type="email" 
                                            class="form-control" 
                                            id="email" 
                                            name="email" 
                                            value="<%= settings.email || '' %>"
                                        >
                                    </div>
                                </div>
                                
                                <div class="row mb-3">
                                    <div class="col-md-6">
                                        <label for="phone" class="form-label">Phone Number</label>
                                        <input 
                                            type="text" 
                                            class="form-control" 
                                            id="phone" 
                                            name="phone" 
                                            value="<%= settings.phone || '' %>"
                                        >
                                    </div>
                                    <div class="col-md-6">
                                        <label for="favicon" class="form-label">Favicon</label>
                                        <input 
                                            type="file" 
                                            class="form-control" 
                                            id="favicon" 
                                            name="favicon" 
                                            accept=".ico,.png,.jpg,.jpeg,.svg"
                                        >
                                        <small class="text-muted">Recommended size: 32x32px or 64x64px. Max file size: 1MB</small>
                                        
                                        <% if (settings.favicon_path) { %>
                                            <div class="mt-2">
                                                <small>Current favicon:</small>
                                                <img src="<%= settings.favicon_path %>" alt="Current Favicon" style="max-width: 32px; max-height: 32px;">
                                            </div>
                                        <% } %>
                                    </div>
                                </div>
                                
                                <div class="mb-3">
                                    <label for="address" class="form-label">Address</label>
                                    <textarea 
                                        class="form-control" 
                                        id="address" 
                                        name="address" 
                                        rows="3"
                                    ><%= settings.address || '' %></textarea>
                                </div>
                                
                                <div class="d-grid gap-2 d-md-flex justify-content-md-end">
                                    <% if (settings.import_tast_data == false) { %>
                                        <!-- For importing Only Test Data Use id "impoertTestDataBtn" Or For Import Complete Package Of test Data use id "importHierarchicalDataBtn" -->
                                        <button type="button" class="btn btn-warning me-2" id="importHierarchicalDataBtn">
                                            <i class="fas fa-file-import me-2"></i>Import Test Data
                                        </button>
                                    <% } %>
                                    <% if (settings.import_feature_data == false && locals.isFeatureVisible('Permission Management')) { %>
                                        <button type="button" class="btn btn-warning me-2" id="importFeaturePermissionsBtn">
                                            <i class="fas fa-file-import me-2"></i>Import Feature Permissions
                                        </button>
                                    <% } %>
                                    <button type="submit" class="btn btn-primary">
                                        <i class="fas fa-save me-2"></i>Save Settings
                                    </button>
                                </div>
                            </form>
                        </div>
                        
                        <!-- Feature Permissions Tab (only for softadmin) -->
                        <% if (locals.isFeatureVisible('Permission Management')) { %>
                        <div class="tab-pane fade" id="permissions" role="tabpanel" aria-labelledby="permissions-tab">
                            <div class="alert alert-primary mb-3">
                                <i class="fas fa-info-circle me-2"></i>
                                <strong>Note:</strong> SoftAdmin users will always see all features regardless of permission settings. These settings only affect other roles like admin, receptionist, doctor, etc.
                            </div>
                            
                            <!-- Tab navigation for modules -->
                            <ul class="nav nav-pills mb-3" id="modulesTabs" role="tablist">
                                <% Object.keys(modules).forEach((moduleName, index) => { %>
                                    <li class="nav-item" role="presentation">
                                        <button class="nav-link <%= index === 0 ? 'active' : '' %>" 
                                                id="<%= moduleName.toLowerCase() %>-module-tab" 
                                                data-bs-toggle="pill" 
                                                data-bs-target="#<%= moduleName.toLowerCase() %>-module" 
                                                type="button" role="tab" 
                                                aria-controls="<%= moduleName.toLowerCase() %>-module" 
                                                aria-selected="<%= index === 0 ? 'true' : 'false' %>">
                                            <%= moduleName %>
                                        </button>
                                    </li>
                                <% }); %>
                            </ul>
                            
                            <!-- Tab content for modules -->
                            <div class="tab-content" id="modulesTabsContent">
                                <% Object.keys(modules).forEach((moduleName, index) => { %>
                                    <div class="tab-pane fade <%= index === 0 ? 'show active' : '' %>" 
                                         id="<%= moduleName.toLowerCase() %>-module" 
                                         role="tabpanel" 
                                         aria-labelledby="<%= moduleName.toLowerCase() %>-module-tab">
                                        
                                        <div class="alert alert-info">
                                            <i class="fas fa-info-circle me-2"></i>Configure which features are visible to different user roles in the <%= moduleName %> module.
                                        </div>
                                        
                                        <form id="<%= moduleName.toLowerCase() %>-permissions-form">
                                            <div class="table-responsive">
                                                <table class="table table-hover">
                                                    <thead class="table-light">
                                                        <tr>
                                                            <th width="40%">Feature</th>
                                                            <th width="20%">Visibility</th>
                                                            <th width="40%">Accessible By</th>
                                                        </tr>
                                                    </thead>
                                                    <tbody>
                                                        <% modules[moduleName].forEach(permission => { %>
                                                            <tr data-permission-id="<%= permission.id %>">
                                                                <td>
                                                                    <strong><%= permission.featureName %></strong>
                                                                </td>
                                                                <td>
                                                                    <div class="form-check form-switch">
                                                                        <input class="form-check-input permission-visibility" 
                                                                               type="checkbox" 
                                                                               id="visibility-<%= permission.id %>" 
                                                                               <%= permission.isVisible ? 'checked' : '' %>>
                                                                        <label class="form-check-label" for="visibility-<%= permission.id %>">
                                                                            <%= permission.isVisible ? 'Visible' : 'Hidden' %>
                                                                        </label>
                                                                    </div>
                                                                </td>
                                                                <td>
                                                                    <select class="form-select permission-roles" multiple>
                                                                        <option value="admin" <%= permission.roles.includes('admin') ? 'selected' : '' %>>Admin</option>
                                                                        <option value="receptionist" <%= permission.roles.includes('receptionist') ? 'selected' : '' %>>Receptionist</option>
                                                                        <option value="doctor" <%= permission.roles.includes('doctor') ? 'selected' : '' %>>Doctor</option>
                                                                        <option value="nurse" <%= permission.roles.includes('nurse') ? 'selected' : '' %>>Nurse</option>
                                                                        <option value="laboratorist" <%= permission.roles.includes('laboratorist') ? 'selected' : '' %>>Laboratorist</option>
                                                                        <option value="marketing" <%= permission.roles.includes('marketing') ? 'selected' : '' %>>Marketing</option>
                                                                    </select>
                                                                </td>
                                                            </tr>
                                                        <% }); %>
                                                    </tbody>
                                                </table>
                                            </div>
                                            
                                            <div class="d-grid gap-2 d-md-flex justify-content-md-end mt-3">
                                                <button type="submit" class="btn btn-primary save-permissions-btn" data-module="<%= moduleName %>">
                                                    <i class="fas fa-save me-2"></i>Save Permissions
                                                </button>
                                            </div>
                                        </form>
                                    </div>
                                <% }); %>
                            </div>
                        </div>
                        <% } %>
                        
                        <!-- Print Template Tab -->
                        <div class="tab-pane fade" id="print-template" role="tabpanel" aria-labelledby="print-template-tab">
                            <div class="alert alert-info mb-3">
                                <i class="fas fa-info-circle me-2"></i>
                                <strong>Note:</strong> Manage print templates for reports and documents. Upload header and footer images to customize your print outputs.
                            </div>
                            
                            <!-- Add New Template Button -->
                            <div class="d-flex justify-content-between align-items-center mb-4">
                                <h6 class="mb-0"><i class="fas fa-print me-2"></i>Print Templates</h6>
                                <button type="button" class="btn btn-primary" data-bs-toggle="modal" data-bs-target="#printTemplateModal" onclick="openCreateModal()">
                                    <i class="fas fa-plus me-2"></i>Add New Template
                                </button>
                            </div>
                            
                            <!-- Existing Templates Table -->
                            <div class="card">
                                <div class="card-header">
                                    <h6 class="mb-0"><i class="fas fa-list me-2"></i>Existing Print Templates</h6>
                                </div>
                                <div class="card-body">
                                    <div class="table-responsive">
                                        <table class="table table-hover" id="printTemplatesTable">
                                            <thead class="table-light">
                                                <tr>
                                                    <th>Name</th>
                                                    <th>Header Image</th>
                                                    <th>Footer Image</th>
                                                    <th>Status</th>
                                                    <th>Created</th>
                                                    <th>Actions</th>
                                                </tr>
                                            </thead>
                                            <tbody id="printTemplatesTableBody">
                                                <!-- Templates will be loaded here -->
                                            </tbody>
                                        </table>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<!-- Print Template Modal -->
<div class="modal fade" id="printTemplateModal" tabindex="-1" aria-labelledby="printTemplateModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="printTemplateModalLabel">
                    <i class="fas fa-plus me-2"></i>Add New Print Template
                </h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <form id="printTemplateForm" enctype="multipart/form-data">
                    <input type="hidden" id="templateId" name="templateId">
                    
                    <!-- Alert container for modal messages -->
                    <div id="modalAlertContainer"></div>
                    
                    <div class="row mb-3">
                        <div class="col-md-6">
                            <label for="templateName" class="form-label">Template Name *</label>
                            <select name="name" id="name" class="form-select" required>
                                <option value="lab">Lab</option>
                            </select>
                        </div>
                        <div class="col-md-6">
                            <label for="templateStatus" class="form-label">Status</label>
                            <select class="form-select" id="templateStatus" name="status">
                                <option value="inactive">Inactive</option>
                                <option value="active">Active</option>
                            </select>
                        </div>
                    </div>
                    
                    <!-- Header Image Section -->
                    <div class="row mb-3">
                        <div class="col-md-12">
                            <h6 class="text-primary"><i class="fas fa-arrow-up me-2"></i>Header Settings</h6>
                            <hr>
                        </div>
                        <div class="col-md-4">
                            <label for="headerImage" class="form-label">Header Image</label>
                            <input type="file" class="form-control" id="headerImage" name="headerImage" accept=".jpg,.jpeg,.png,.gif,.svg">
                            <small class="text-muted">Recommended formats: JPG, PNG, SVG. Max size: 2MB</small>
                            <div id="headerImagePreview" class="mt-2"></div>
                        </div>
                        <div class="col-md-4">
                            <label for="headerWidth" class="form-label">Header Width (px)</label>
                            <input type="number" class="form-control" id="headerWidth" name="header_width" min="50" max="2000">
                        </div>
                        <div class="col-md-4">
                            <label for="headerHeight" class="form-label">Header Height (px)</label>
                            <input type="number" class="form-control" id="headerHeight" name="header_height" min="20" max="500">
                        </div>
                    </div>
                    
                    <!-- Footer Image Section -->
                    <div class="row mb-3">
                        <div class="col-md-12">
                            <h6 class="text-primary"><i class="fas fa-arrow-down me-2"></i>Footer Settings</h6>
                            <hr>
                        </div>
                        <div class="col-md-4">
                            <label for="footerImage" class="form-label">Footer Image</label>
                            <input type="file" class="form-control" id="footerImage" name="footerImage" accept=".jpg,.jpeg,.png,.gif,.svg">
                            <small class="text-muted">Recommended formats: JPG, PNG, SVG. Max size: 2MB</small>
                            <div id="footerImagePreview" class="mt-2"></div>
                        </div>
                        <div class="col-md-4">
                            <label for="footerWidth" class="form-label">Footer Width (px)</label>
                            <input type="number" class="form-control" id="footerWidth" name="footer_width" min="50" max="2000">
                        </div>
                        <div class="col-md-4">
                            <label for="footerHeight" class="form-label">Footer Height (px)</label>
                            <input type="number" class="form-control" id="footerHeight" name="footer_height" min="20" max="500">
                        </div>
                    </div>
                </form>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">
                    <i class="fas fa-times me-2"></i>Cancel
                </button>
                <button type="submit" form="printTemplateForm" class="btn btn-primary" id="submitTemplateBtn">
                    <i class="fas fa-save me-2"></i>Save Template
                </button>
            </div>
        </div>
    </div>
</div>

<!-- Feature Permissions Script -->
<script>
document.addEventListener('DOMContentLoaded', function() {
    // Toggle visibility label
    document.querySelectorAll('.permission-visibility').forEach(checkbox => {
        checkbox.addEventListener('change', function() {
            const label = this.nextElementSibling;
            label.textContent = this.checked ? 'Visible' : 'Hidden';
        });
    });
    
    // Save permissions
    document.querySelectorAll('.save-permissions-btn').forEach(button => {
        button.addEventListener('click', async function(e) {
            e.preventDefault();
            
            const moduleName = this.dataset.module;
            const permissionsForm = document.getElementById(`${moduleName.toLowerCase()}-permissions-form`);
            const permissionRows = permissionsForm.querySelectorAll('tbody tr');
            
            const permissions = [];
            
            permissionRows.forEach(row => {
                const id = row.dataset.permissionId;
                const isVisible = row.querySelector('.permission-visibility').checked;
                const rolesSelect = row.querySelector('.permission-roles');
                const roles = Array.from(rolesSelect.selectedOptions).map(option => option.value);
                
                permissions.push({
                    id,
                    isVisible,
                    roles
                });
            });
            
            try {
                const response = await fetch('/settings/permissions', {
                    method: 'PUT',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify({ permissions })
                });
                
                if (response.ok) {
                    // Show success message
                    const alertDiv = document.createElement('div');
                    alertDiv.className = 'alert alert-success alert-dismissible fade show mt-3';
                    alertDiv.innerHTML = `
                        <i class="fas fa-check-circle me-2"></i>Permissions updated successfully
                        <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
                    `;
                    permissionsForm.prepend(alertDiv);
                    
                    // Auto dismiss after 3 seconds
                    setTimeout(() => {
                        alertDiv.classList.remove('show');
                        setTimeout(() => alertDiv.remove(), 150);
                    }, 3000);
                } else {
                    throw new Error('Failed to update permissions');
                }
            } catch (error) {
                console.error('Error saving permissions:', error);
                
                // Show error message
                const alertDiv = document.createElement('div');
                alertDiv.className = 'alert alert-danger alert-dismissible fade show mt-3';
                alertDiv.innerHTML = `
                    <i class="fas fa-exclamation-circle me-2"></i>Failed to update permissions
                    <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
                `;
                permissionsForm.prepend(alertDiv);
            }
        });
    });
});
</script>

<!-- Script for importing test data and feature permissions -->
<script>
document.addEventListener('DOMContentLoaded', function() {
    // Import hierarchical test data (recommended)
    const importHierarchicalDataBtn = document.getElementById('importHierarchicalDataBtn');
    if (importHierarchicalDataBtn) {
        importHierarchicalDataBtn.addEventListener('click', async function(e) {
            e.preventDefault();
            if (confirm('Are you sure you want to import hierarchical test data?\n\nThis will import:\n• Test Departments\n• Test Categories\n• Test Groups\n• Tests with units and reference ranges\n\nThis is the recommended import option.')) {
                const btn = this;
                const originalText = btn.innerHTML;
                
                try {
                    // Show loading state
                    btn.innerHTML = '<i class="fas fa-spinner fa-spin me-2"></i>Importing...';
                    btn.style.pointerEvents = 'none';
                    
                    const response = await fetch('/settings/import-test-data', {
                        method: 'POST',
                        headers: {
                            'Content-Type': 'application/json'
                        },
                        body: JSON.stringify({ importType: 'hierarchical' })
                    });
                    
                    const data = await response.json();
                    
                    if (data.success) {
                        alert(`Hierarchical test data imported successfully!\n\nImported:\n• ${data.data.departments} departments\n• ${data.data.categories} categories\n• ${data.data.groups} groups\n• ${data.data.tests} tests\n\nPlease refresh the page.`);
                        window.location.reload();
                    } else {
                        alert('Failed to import hierarchical data: ' + data.message);
                    }
                } catch (error) {
                    alert('Error importing hierarchical data: ' + error.message);
                } finally {
                    // Restore button state
                    btn.innerHTML = originalText;
                    btn.style.pointerEvents = 'auto';
                }
            }
        });
    }
    
    // Import test data only (legacy)
    const importTestDataBtn = document.getElementById('importTestDataBtn');
    if (importTestDataBtn) {
        importTestDataBtn.addEventListener('click', async function(e) {
            e.preventDefault();
            if (confirm('Are you sure you want to import tests only?\n\nThis legacy import will only add tests without the hierarchical structure (departments, categories, groups).\n\nWe recommend using "Import Hierarchical Data" instead.')) {
                const btn = this;
                const originalText = btn.innerHTML;
                
                try {
                    // Show loading state
                    btn.innerHTML = '<i class="fas fa-spinner fa-spin me-2"></i>Importing...';
                    btn.style.pointerEvents = 'none';
                    
                    const response = await fetch('/settings/import-test-data', {
                        method: 'POST',
                        headers: {
                            'Content-Type': 'application/json'
                        },
                        body: JSON.stringify({ importType: 'tests-only' })
                    });
                    
                    const data = await response.json();
                    
                    if (data.success) {
                        alert(`Test data imported successfully!\n\nImported: ${data.data.count} tests\n\nPlease refresh the page.`);
                        window.location.reload();
                    } else {
                        alert('Failed to import test data: ' + data.message);
                    }
                } catch (error) {
                    alert('Error importing test data: ' + error.message);
                } finally {
                    // Restore button state
                    btn.innerHTML = originalText;
                    btn.style.pointerEvents = 'auto';
                }
            }
        });
    }
    
    // Import feature permissions
    const importFeaturePermissionsBtn = document.getElementById('importFeaturePermissionsBtn');
    if (importFeaturePermissionsBtn) {
        importFeaturePermissionsBtn.addEventListener('click', async function() {
            if (confirm('Are you sure you want to import feature permissions? This will reset all existing permissions.')) {
                try {
                    const response = await fetch('/settings/import-feature-permissions', {
                        method: 'POST',
                        headers: {
                            'Content-Type': 'application/json'
                        }
                    });
                    
                    const data = await response.json();
                    
                    if (data.success) {
                        alert('Feature permissions imported successfully! Please refresh the page.');
                        window.location.reload();
                    } else {
                        alert('Failed to import feature permissions: ' + data.message);
                    }
                } catch (error) {
                    alert('Error importing feature permissions: ' + error.message);
                }
            }
        });
    }
});
</script>

<!-- Print Template Management Script -->
<script>
document.addEventListener('DOMContentLoaded', function() {
    let isEditingTemplate = false;
    let printTemplateModal;
    
    // Initialize modal
    printTemplateModal = new bootstrap.Modal(document.getElementById('printTemplateModal'));
    
    // Load print templates when the tab is activated
    document.getElementById('print-template-tab').addEventListener('shown.bs.tab', function() {
        loadPrintTemplates();
    });
    
    // Image preview functionality
    function setupImagePreview(inputId, previewId) {
        document.getElementById(inputId).addEventListener('change', function(e) {
            const file = e.target.files[0];
            const preview = document.getElementById(previewId);
            
            if (file) {
                const reader = new FileReader();
                reader.onload = function(e) {
                    preview.innerHTML = `
                        <div class="mt-2">
                            <small>Preview:</small><br>
                            <img src="${e.target.result}" alt="Preview" style="max-width: 150px; max-height: 100px; border: 1px solid #ddd; border-radius: 4px;">
                        </div>
                    `;
                };
                reader.readAsDataURL(file);
            } else {
                preview.innerHTML = '';
            }
        });
    }
    
    // Setup image previews
    setupImagePreview('headerImage', 'headerImagePreview');
    setupImagePreview('footerImage', 'footerImagePreview');
    
    // Open create modal
    window.openCreateModal = function() {
        resetTemplateForm();
        document.getElementById('printTemplateModalLabel').innerHTML = '<i class="fas fa-plus me-2"></i>Add New Print Template';
        document.getElementById('submitTemplateBtn').innerHTML = '<i class="fas fa-save me-2"></i>Save Template';
        isEditingTemplate = false;
    };
    
    // Load print templates
    async function loadPrintTemplates() {
        try {
            const response = await fetch('/settings/print-templates');
            const data = await response.json();
            
            if (data.success) {
                renderPrintTemplatesTable(data.templates);
            } else {
                console.error('Failed to load print templates:', data.message);
            }
        } catch (error) {
            console.error('Error loading print templates:', error);
        }
    }
    
    // Render print templates table
    function renderPrintTemplatesTable(templates) {
        const tbody = document.getElementById('printTemplatesTableBody');
        
        if (!templates || templates.length === 0) {
            tbody.innerHTML = `
                <tr>
                    <td colspan="6" class="text-center py-4">
                        <i class="fas fa-inbox text-muted me-2"></i>No print templates found
                    </td>
                </tr>
            `;
            return;
        }
        
        tbody.innerHTML = templates.map(template => `
            <tr>
                <td>
                    <strong>${template.name}</strong>
                    ${template.status === 'active' ? '<span class="badge bg-success ms-2">Active</span>' : '<span class="badge bg-secondary ms-2">Inactive</span>'}
                </td>
                <td>
                    ${template.header_img ? 
                        `<img src="${template.header_img}" alt="Header" style="max-width: 60px; max-height: 40px; border-radius: 4px;">
                         <br><small class="text-muted">${template.header_width}×${template.header_height}px</small>` 
                        : '<span class="text-muted">No image</span>'
                    }
                </td>
                <td>
                    ${template.footer_image ? 
                        `<img src="${template.footer_image}" alt="Footer" style="max-width: 60px; max-height: 40px; border-radius: 4px;">
                         <br><small class="text-muted">${template.footer_width}×${template.footer_height}px</small>` 
                        : '<span class="text-muted">No image</span>'
                    }
                </td>
                <td>
                    <span class="badge ${template.status === 'active' ? 'bg-success' : 'bg-secondary'}">
                        ${template.status.charAt(0).toUpperCase() + template.status.slice(1)}
                    </span>
                </td>
                <td>
                    <small class="text-muted">${new Date(template.createdAt).toLocaleDateString()}</small>
                </td>
                <td>
                    <div class="btn-group btn-group-sm">
                        <button class="btn btn-outline-primary btn-sm" onclick="editTemplate(${template.id})" title="Edit">
                            <i class="fas fa-edit"></i>
                        </button>
                        <button class="btn btn-outline-danger btn-sm" onclick="deleteTemplate(${template.id})" title="Delete">
                            <i class="fas fa-trash"></i>
                        </button>
                    </div>
                </td>
            </tr>
        `).join('');
    }
    
    // Edit template
    window.editTemplate = async function(templateId) {
        try {
            const response = await fetch(`/settings/print-templates/${templateId}`);
            const data = await response.json();
            
            if (data.success) {
                const template = data.template;
                
                // Reset form first
                resetTemplateForm();
                
                // Fill form with template data
                document.getElementById('templateId').value = template.id;
                document.getElementById('templateName').value = template.name;
                document.getElementById('templateStatus').value = template.status;
                document.getElementById('headerWidth').value = template.header_width || '';
                document.getElementById('headerHeight').value = template.header_height || '';
                document.getElementById('footerWidth').value = template.footer_width || '';
                document.getElementById('footerHeight').value = template.footer_height || '';
                
                // Show existing images
                if (template.header_img) {
                    document.getElementById('headerImagePreview').innerHTML = `
                        <div class="mt-2">
                            <small>Current header image:</small><br>
                            <img src="${template.header_img}" alt="Current Header" style="max-width: 150px; max-height: 100px; border: 1px solid #ddd; border-radius: 4px;">
                        </div>
                    `;
                }
                
                if (template.footer_image) {
                    document.getElementById('footerImagePreview').innerHTML = `
                        <div class="mt-2">
                            <small>Current footer image:</small><br>
                            <img src="${template.footer_image}" alt="Current Footer" style="max-width: 150px; max-height: 100px; border: 1px solid #ddd; border-radius: 4px;">
                        </div>
                    `;
                }
                
                // Update modal for editing
                isEditingTemplate = true;
                document.getElementById('printTemplateModalLabel').innerHTML = '<i class="fas fa-edit me-2"></i>Edit Print Template';
                document.getElementById('submitTemplateBtn').innerHTML = '<i class="fas fa-save me-2"></i>Update Template';
                
                // Show the modal
                printTemplateModal.show();
            }
        } catch (error) {
            console.error('Error loading template for edit:', error);
            alert('Error loading template for editing');
        }
    };
    
    // Delete template
    window.deleteTemplate = async function(templateId) {
        if (confirm('Are you sure you want to delete this print template? This action cannot be undone.')) {
            try {
                const response = await fetch(`/settings/print-templates/${templateId}`, {
                    method: 'DELETE'
                });
                
                const data = await response.json();
                
                if (data.success) {
                    loadPrintTemplates(); // Reload the table
                    showToast('success', 'Print template deleted successfully');
                } else {
                    showToast('danger', 'Failed to delete print template: ' + data.message);
                }
            } catch (error) {
                console.error('Error deleting template:', error);
                showToast('danger', 'Error deleting print template');
            }
        }
    };
    
    // Reset form
    function resetTemplateForm() {
        document.getElementById('printTemplateForm').reset();
        document.getElementById('templateId').value = '';
        document.getElementById('headerImagePreview').innerHTML = '';
        document.getElementById('footerImagePreview').innerHTML = '';
        document.getElementById('modalAlertContainer').innerHTML = '';
        isEditingTemplate = false;
    }
    
    // Submit print template form
    document.getElementById('printTemplateForm').addEventListener('submit', async function(e) {
        e.preventDefault();
        
        const formData = new FormData(this);
        const submitBtn = document.getElementById('submitTemplateBtn');
        const originalText = submitBtn.innerHTML;
        
        try {
            // Show loading state
            submitBtn.innerHTML = '<i class="fas fa-spinner fa-spin me-2"></i>Saving...';
            submitBtn.disabled = true;
            
            const url = isEditingTemplate ? 
                `/settings/print-templates/${formData.get('templateId')}` : 
                '/settings/print-templates';
            
            const method = isEditingTemplate ? 'PUT' : 'POST';
            
            const response = await fetch(url, {
                method: method,
                body: formData
            });
            
            const data = await response.json();
            
            if (data.success) {
                showModalAlert('success', `Print template ${isEditingTemplate ? 'updated' : 'created'} successfully`);
                loadPrintTemplates(); // Reload the table
                
                // Close modal after short delay
                setTimeout(() => {
                    printTemplateModal.hide();
                    resetTemplateForm();
                }, 1500);
            } else {
                showModalAlert('danger', `Failed to ${isEditingTemplate ? 'update' : 'create'} print template: ` + data.message);
            }
        } catch (error) {
            console.error('Error saving template:', error);
            showModalAlert('danger', `Error ${isEditingTemplate ? 'updating' : 'creating'} print template`);
        } finally {
            // Restore button state
            submitBtn.innerHTML = originalText;
            submitBtn.disabled = false;
        }
    });
    
    // Show modal alert function
    function showModalAlert(type, message) {
        const alertDiv = document.createElement('div');
        alertDiv.className = `alert alert-${type} alert-dismissible fade show`;
        alertDiv.innerHTML = `
            <i class="fas fa-${type === 'success' ? 'check-circle' : 'exclamation-circle'} me-2"></i>${message}
            <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
        `;
        
        const container = document.getElementById('modalAlertContainer');
        container.innerHTML = '';
        container.appendChild(alertDiv);
        
        // Auto dismiss after 3 seconds for success messages
        if (type === 'success') {
            setTimeout(() => {
                if (alertDiv.parentNode) {
                    alertDiv.classList.remove('show');
                    setTimeout(() => {
                        if (alertDiv.parentNode) {
                            alertDiv.remove();
                        }
                    }, 150);
                }
            }, 3000);
        }
    }
    
    // Reset form when modal is hidden
    document.getElementById('printTemplateModal').addEventListener('hidden.bs.modal', function() {
        resetTemplateForm();
    });
});
</script>

<%- include('./partials/footer') %> 