<%- include('partials/header') %>
<%- include('partials/navbar') %>
<%- include('partials/date-formatter') %>

<style>
    /* Remove Roboto Mono import and replace with system Arial */
    @media print {
    /* Basic print settings */
    body {
        margin: 0;
        padding: 0;
    }
    
    .print-invoice {
        padding: 5px;
        max-width: 100%;
        box-sizing: border-box;
        font-size: 12px;
        font-family: Arial, sans-serif;
        letter-spacing: -0.5px;
    }
    
    /* Header elements */
    .invoice-title {
        font-size: 22px !important;
        font-family: Arial, sans-serif;
        letter-spacing: -0.5px;
    }
    
    .invoice-subtitle {
        font-size: 14px !important;
        font-family: Arial, sans-serif;
        letter-spacing: -0.5px;
    }
    
    /* Information table */
    .invoice-info-table {
        border: 1px solid #000000 !important;
    }
    
    .invoice-info-table td {
        padding: 5px 8px !important;
        border: none !important;
    }
    
    .info-label {
        font-size: 12px !important;
        font-family: Arial, sans-serif;
        letter-spacing: -0.5px;
    }
    
    .info-value {
        font-size: 13px !important;
        margin-bottom: 0 !important;
        font-family: Arial, sans-serif;
        letter-spacing: -0.5px;
    }
    
    /* Section titles and table elements */
    .section-title {
        font-size: 12px !important;
        font-family: Arial, sans-serif;
        letter-spacing: 0px;
    }
    
    .invoice-table th, .invoice-table td {
        font-size: 12px !important;
        font-family: Arial, sans-serif;
        letter-spacing: -0.5px;
    }
    
    .invoice-table {
        margin-bottom: 2px !important;
    }
    
    /* Totals section */
    .invoice-total-section {
        margin-top: 2px !important;
        padding-top: 2px !important;
    }
    
    /* Seal container */
    .seal-container {
        width: 80px !important;
        height: 80px !important;
        transform: rotate(-10deg) !important;
    }
    
    .seal-background {
        border-width: 1px !important;
    }
    
    .seal-status {
        font-size: 19px !important;
    }
    
    .seal-amount {
        font-size: 14px !important;
    }
    
    /* Totals section */
    .invoice-total-label, .invoice-total-value {
        font-size: 14px !important;
    }
    
    .invoice-grand-total {
        font-size: 16px !important;
    }
    
    .barcode-container {
        width: 220px !important;
        margin: 0 !important;
        padding: 0 !important;
        line-height: 0 !important;
    }
    
    /* Page size settings */
    @page {
        size: 5.5in 7.5in;
        margin: 0;
    }
    
    /* Force content to fit */
    .print-invoice {
        transform-origin: top left;
        transform: scale(var(--scale-factor, 0.95));
        width: 5.5in;
        height: 7.5in;
        overflow: hidden;
    }
    
    /* Diagnostic header */
    .diagnostic-title {
        font-size: 19px !important;
    }
    
    .diagnostic-address, .diagnostic-mobile {
        font-size: 15px !important;
    }
    
    /* Signature section */
    .signature-title {
        font-size: 12px !important;
    }
    
    .signature-subtitle {
        font-size: 16px !important;
    }
    
    /* Totals section */
    .invoice-total-label, .invoice-total-value {
        font-size: 12px !important;
    }
    
    .invoice-grand-total {
        font-size: 14px !important;
    }
    
    /* Invoice info spacing */
    .invoice-info-row {
        margin: 0 !important;
        padding: 0 !important;
        line-height: 0 !important;
        height: auto !important;
        min-height: 0 !important;
    }
    
    .invoice-memo-text {
        margin-top: -5px !important;
        line-height: 1 !important;
    }
    
    .invoice-info-table {
        margin: 0 !important;
    }
}
    
    .print-invoice {
        background-color: white;
        color: #333;
        padding: 10px;
        max-width: 800px;
        margin: 0 auto;
        font-family: Arial, sans-serif;
        font-size: 14px;
        letter-spacing: -0.5px;
    }
    
    .invoice-header {
        border-bottom: 1px solid #f0f0f0;
        text-align: center;
        padding: 0;
        margin: 0;
    }
    
    .invoice-title {
        font-size: 30px;
        color: #000000;
        font-weight: 300;
        margin: 0;
        line-height: 1;
        font-family: Arial, sans-serif;
        letter-spacing: -0.5px;
    }
    
    .invoice-subtitle {
        color: #000000;
        font-weight: 300;
        margin: 0;
        font-size: 16px;
        line-height: 1;
        font-family: Arial, sans-serif;
        letter-spacing: -0.5px;
    }
    
    .invoice-info-table {
        width: 100%;
        border-collapse: collapse;
        margin: 0;
        border: 1px solid #000000;
    }
    
    .invoice-info-table td {
        padding: 5px 8px;
        border: none;
        vertical-align: top;
        background-color: #f9f9f9;
    }
    
    .info-label {
        font-size: 14px;
        text-transform: uppercase;
        color: #000000;
        padding: 0;
        margin: 0;
        font-weight: normal;
        line-height: 1;
        font-family: Arial, sans-serif;
        letter-spacing: -0.5px;
    }
    
    .info-value {
        font-size: 18px;
        margin: 0 0 2px 0;
        line-height: 1.1;
        font-family: Arial, sans-serif;
        letter-spacing: -0.5px;
    }
    
    .section-title {
        font-size: 18px;
        text-transform: uppercase;
        color: #000000;
        font-weight: normal;
        letter-spacing: 0px;
        margin: 2px 0;
        line-height: 1;
        font-family: Arial, sans-serif;
    }
    
    .invoice-table {
        width: 100%;
        border-collapse: collapse;
        border: 1px solid #000000;
        margin: 3px 0;
    }
    
    .invoice-table th {
        background-color: #f9f9f9;
        padding: 4px;
        text-align: left;
        font-weight: normal;
        color: #000000;
        font-size: 16px;
        border-bottom: 1px solid #000000;
        border-left: none;
        border-right: none;
        border-top: none;
        line-height: 1.2;
        font-family: Arial, sans-serif;
        letter-spacing: -0.5px;
    }
    
    .invoice-table td {
        border-bottom: 1px dotted #eee;
        border-left: none;
        border-right: none;
        border-top: none;
        font-size: 16px;
        line-height: 1.3;
        font-family: Arial, sans-serif;
        letter-spacing: -0.5px;
    }
    
    .text-right {
        text-align: right;
    }
    
    .text-center {
        text-align: center;
    }
    
    .invoice-total-section {
        margin-top: 10px;
        padding-top: 10px;
        border-top: 1px solid #e6e5e5;
        display: flex;
        justify-content: space-between;
    }
    
    .invoice-status-seal {
        flex: 1;
        display: flex;
        flex-direction: column;
        justify-content: center;
        align-items: center;
        position: relative;
    }
    
    .seal-container {
        position: relative;
        width: 130px;
        height: 130px;
        margin-bottom: 5px;
        transform: rotate(-10deg);
        filter: drop-shadow(0 3px 5px rgba(0,0,0,0.15));
    }
    
    .seal-background {
        position: absolute;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        border-radius: 50%;
        border: 2px solid #000;
        display: flex;
        flex-direction: column;
        justify-content: center;
        align-items: center;
        overflow: hidden;
        background-color: #f8f8f8;
    }
    
    .seal-background::before {
        content: '';
        position: absolute;
        top: -50%;
        left: -50%;
        width: 200%;
        height: 200%;
        background: repeating-linear-gradient(
            45deg,
            transparent,
            transparent 8px,
            rgba(0,0,0,0.02) 8px,
            rgba(0,0,0,0.02) 16px
        );
        z-index: -1;
    }
    
    .paid-seal {
        background-color: #f8f8f8;
        border-color: #000000;
    }
    
    .partial-seal {
        background-color: #f8f8f8;
        border-color: #000000;
    }
    
    .unpaid-seal {
        background-color: #f8f8f8;
        border-color: #000000;
    }
    
    .seal-status {
        font-size: 25px;
        font-weight: normal;
        text-transform: uppercase;
        letter-spacing: 1px;
        margin: 0;
        line-height: 1;
        font-family: Arial, sans-serif;
    }
    
    .paid-text {
        color: #000000;
    }
    
    .partial-text {
        color: #000000;
    }
    
    .unpaid-text {
        color: #000000;
    }
    
    .seal-amount {
        font-size: 17px;
        font-weight: normal;
        color: #000000;
        margin: 0;
        line-height: 1.1;
        font-family: Arial, sans-serif;
        letter-spacing: -0.5px;
    }
    
    .seal-label {
        font-size: 11px;
        text-transform: uppercase;
        margin-top: 2px;
        color: #000000;
        font-family: Arial, sans-serif;
        letter-spacing: -0.5px;
    }
    
    .invoice-total {
        flex: 1;
        max-width: 300px;
        margin-left: auto;
    }
    
    .invoice-total-row {
        display: flex;
        justify-content: space-between;
        margin: 0 0 2px 0;
        line-height: 1;
    }
    
    .invoice-total-label {
        color: #000000;
        font-size: 16px;
        font-family: Arial, sans-serif;
        letter-spacing: -0.5px;
    }
    
    .invoice-total-value {
        font-weight: normal;
        text-align: right;
        min-width: 100px;
        font-size: 16px;
        font-family: Arial, sans-serif;
        letter-spacing: -0.5px;
    }
    
    .invoice-grand-total {
        font-size: 22px;
        font-weight: normal;
        color: #000000;
        padding-top: 2px;
        margin-top: 2px;
        border-top: 1px solid #000000;
        line-height: 1;
    }
    
    .status-badge {
        display: inline-block;
        padding: 2px 5px;
        border-radius: 30px;
        font-size: 11px;
        font-weight: normal;
        text-transform: uppercase;
        font-family: Arial, sans-serif;
        letter-spacing: -0.5px;
    }
    
    .status-paid {
        background-color: #e8f5e9;
        color: #388e3c;
    }
    
    .status-unpaid {
        background-color: #ffebee;
        color: #d32f2f;
    }
    
    .invoice-footer {
        margin-top: 10px;
        text-align: center;
        color: #000000;
        font-size: 13px;
        font-family: Arial, sans-serif;
        letter-spacing: -0.5px;
    }
    
    .signature-section {
        display: flex;
        justify-content: space-between;
        margin-top: 15px;
        padding-top: 5px;
    }
    
    .signature-box {
        flex: 1;
        text-align: center;
        padding: 0 5px;
        position: relative;
    }
    
    .signature-box:not(:last-child):after {
        content: '';
        position: absolute;
        top: 15%;
        right: 0;
        height: 70%;
        border-right: 1px dotted #ddd;
    }
    
    .signature-line {
        border-top: 1px solid #333;
        margin-bottom: 4px;
        width: 80%;
        margin-left: auto;
        margin-right: auto;
    }
    
    .signature-title {
        font-weight: normal;
        font-size: 14px;
        margin: 0 0 2px 0;
        line-height: 1;
        font-family: Arial, sans-serif;
        letter-spacing: -0.5px;
    }
    
    .signature-subtitle {
        font-size: 16px;
        color: #666;
        margin: 0;
        line-height: 1;
        font-family: Arial, sans-serif;
        letter-spacing: -0.5px;
    }
    
    /* Barcode container styles */
    .receipt-header-container {
        display: flex;
        justify-content: space-between;
        align-items: center;
        margin: 0;
        padding: 0;
    }
    
    .barcode-container {
        width: 280px;
        margin: 0;
        padding: 0;
        line-height: 0;
    }
    
    .invoice-memo-text {
        font-size: 19px;
        font-weight: 500;
        text-align: center;
        width: 100%;
        position: absolute;
        left: 0;
        right: 0;
        margin-top: -5px;
        font-family: Arial, sans-serif;
        letter-spacing: -0.5px;
        line-height: 1;
    }
    
    .mobile-info {
        font-size: 14px;
        color: #333;
        margin: 0;
        line-height: 1;
        font-family: Arial, sans-serif;
        letter-spacing: -0.5px;
    }
    
    .diagnostic-header {
        text-align: center;
        margin: 0;
        padding: 0;
        line-height: 1;
    }
    
    .diagnostic-title {
        font-size: 21px;
        font-weight: normal;
        color: #333;
        margin: 0 0 2px 0;
        line-height: 1;
        font-family: Arial, sans-serif;
    }
    
    .diagnostic-address {
        font-size: 16px;
        color: #333;
        margin: 0 0 2px 0;
        line-height: 1;
        font-family: Arial, sans-serif;
    }
    
    .diagnostic-mobile {
        font-size: 15px;
        color: #333;
        margin: 0 0 2px 0;
        line-height: 1;
        font-family: Arial, sans-serif;
    }
    
    .invoice-info-row {
        display: flex;
        justify-content: space-between;
        align-items: center;
        position: relative;
        margin: 0;
        padding: 0;
        line-height: 0;
        height: auto;
        min-height: 0;
    }
    
    .invoice-info-table {
        margin: 0;
    }
    
    .duplicate-tag {
        font-size: 16px;
        color: #666;
        margin-left: auto;
        font-family: Arial, sans-serif;
        letter-spacing: -0.5px;
    }

    /* Handle decimal display differently for print */
    @media print {
        .print-no-decimal {
            display: inline;
        }
        .no-print {
            display: none;
        }
    }

    @media screen {
        .print-no-decimal {
            display: none;
        }
        .no-print {
            display: inline;
        }
    }
</style>

<div class="container mb-4 no-print">
    <div class="d-flex justify-content-end mt-4">
        <button class="btn btn-outline-secondary me-2" onclick="window.print()">
            <i class="fas fa-print me-1"></i> Print Invoice
        </button>
        <a href="/billing" class="btn btn-primary">
            <i class="fas fa-arrow-left me-1"></i> Back
        </a>
    </div>
</div>

<%
// Date formatting helper function
function formatDate(date) {
    if (!date) return 'N/A';
    
    const d = new Date(date);
    if (isNaN(d.getTime())) return 'Invalid Date';
    
    const day = d.getDate().toString().padStart(2, '0');
    const month = d.toLocaleString('en-US', { month: 'short' });
    const year = d.getFullYear().toString().slice(-2);
    
    return `${day}-${month}-${year}`;
}

const items = JSON.parse(billing.items);
const appointments = items.filter(item => item.type === 'appointment');
const cabins = items.filter(item => item.type === 'cabin');
const tests = items.filter(item => item.type === 'test');

// Calculate age from date of birth
function calculateAge(dateOfBirth) {
    const dob = new Date(dateOfBirth);
    const today = new Date();
    
    let years = today.getFullYear() - dob.getFullYear();
    let months = today.getMonth() - dob.getMonth();
    let days = today.getDate() - dob.getDate();
    
    // Adjust for negative days
    if (days < 0) {
        months--;
        // Days in previous month
        const lastMonth = new Date(today.getFullYear(), today.getMonth(), 0);
        days += lastMonth.getDate();
    }
    
    // Adjust for negative months
    if (months < 0) {
        years--;
        months += 12;
    }
    
    return `${years} Y, ${months} M, ${days} D`;
}

// Function to format amounts - removes decimal for print, keeps for screen
function formatAmount(amount) {
    // When printing, show without decimal places
    return `<span class="print-no-decimal">Tk ${Math.round(parseFloat(amount))}</span><span class="no-print">Tk ${parseFloat(amount).toFixed(2)}</span>`;
}
%>

<div class="print-invoice">
    <div class="diagnostic-header">
        <div class="diagnostic-title"><%= locals.settings && settings.medical_name ? settings.medical_name : 'HOSPITAL MANAGEMENT SYSTEM' %></div>
        <div class="diagnostic-address">Address: <%= locals.settings && settings.address ? settings.address : 'No Address' %></div>
        <div class="diagnostic-mobile">Mobile: <%= locals.settings && settings.phone ? settings.phone : 'No Phone' %></div>
    </div>
    
    <div class="invoice-info-row">
        <div class="barcode-container">
            <svg width="100%" viewBox="0 0 280 50">
                <!-- Linear barcode mimicking standard UPC/EAN style -->
                <rect x="10" y="5" width="2" height="30" fill="black"/>
                <rect x="13" y="5" width="1" height="30" fill="black"/>
                <rect x="16" y="5" width="3" height="30" fill="black"/>
                <rect x="21" y="5" width="2" height="30" fill="black"/>
                <rect x="25" y="5" width="4" height="30" fill="black"/>
                <rect x="30" y="5" width="2" height="30" fill="black"/>
                <rect x="34" y="5" width="1" height="30" fill="black"/>
                <rect x="37" y="5" width="3" height="30" fill="black"/>
                <rect x="42" y="5" width="2" height="30" fill="black"/>
                <rect x="46" y="5" width="1" height="30" fill="black"/>
                <rect x="49" y="5" width="3" height="30" fill="black"/>
                <rect x="55" y="5" width="2" height="30" fill="black"/>
                <rect x="59" y="5" width="1" height="30" fill="black"/>
                <rect x="62" y="5" width="3" height="30" fill="black"/>
                <rect x="67" y="5" width="2" height="30" fill="black"/>
                <rect x="71" y="5" width="1" height="30" fill="black"/>
                <rect x="74" y="5" width="3" height="30" fill="black"/>
                <rect x="79" y="5" width="2" height="30" fill="black"/>
                <rect x="83" y="5" width="1" height="30" fill="black"/>
                <rect x="86" y="5" width="3" height="30" fill="black"/>
                <rect x="91" y="5" width="2" height="30" fill="black"/>
                <rect x="94" y="5" width="2" height="30" fill="black"/>
                <rect x="97" y="5" width="1" height="30" fill="black"/>
                <rect x="100" y="5" width="3" height="30" fill="black"/>
                <rect x="105" y="5" width="2" height="30" fill="black"/>
                <rect x="109" y="5" width="4" height="30" fill="black"/>
                <rect x="115" y="5" width="2" height="30" fill="black"/>
                <rect x="119" y="5" width="1" height="30" fill="black"/>
                <rect x="122" y="5" width="3" height="30" fill="black"/>
                <rect x="127" y="5" width="2" height="30" fill="black"/>
                <rect x="131" y="5" width="1" height="30" fill="black"/>
                <rect x="134" y="5" width="3" height="30" fill="black"/>
                <rect x="139" y="5" width="2" height="30" fill="black"/>
                <rect x="143" y="5" width="1" height="30" fill="black"/>
                <rect x="146" y="5" width="3" height="30" fill="black"/>
                <rect x="151" y="5" width="2" height="30" fill="black"/>
                <rect x="155" y="5" width="1" height="30" fill="black"/>
                <rect x="158" y="5" width="3" height="30" fill="black"/>
                <rect x="163" y="5" width="2" height="30" fill="black"/>
                <rect x="167" y="5" width="1" height="30" fill="black"/>
                <rect x="170" y="5" width="3" height="30" fill="black"/>
                <rect x="175" y="5" width="2" height="30" fill="black"/>
            </svg>
        </div>
        <div class="invoice-memo-text">Invoice/Memo</div>
    </div>

    <table class="invoice-info-table">
        <tr>
            <td style="width: 50%;">
                <div class="info-label">Bill To</div>
                <div class="info-value"><%= billing.Patient.name %></div>
                <div class="info-value">Patient ID: <%= billing.Patient.patientId %></div>
                <div class="info-value">Age: <%= calculateAge(billing.Patient.dateOfBirth) %></div>
                <div class="info-value">Gender: <%= billing.Patient.gender %></div>
                <div class="info-value">Mobile: <%= billing.Patient.phone %></div>
            </td>
            <td style="width: 50%;">
                <div class="info-label">Invoice Details</div>
                <div class="info-value">Invoice #: <%= billing.billNumber %></div>
                <div class="info-value">Billing Date: <%= formatDate(billing.billDate) %></div>
                <% if (billing.billdelivaridate) { %>
                <div class="info-value">Delivery Date: <%= formatDate(billing.billdelivaridate) %></div>
                <% } %>
                <% if (billing.referringDoctor) { %>
                <div class="info-value">Ref: <%= billing.referringDoctor.replace(/[()]/g, '') %></div>
                <% } %>
                
                <% 
                // Display all doctors associated with tests
                if (Array.isArray(items)) {
                    const testItems = items.filter(item => item.type === 'test' && item.doctorId && item.doctorName);
                    
                    if (testItems.length > 0) {
                        // Get all doctor names without duplicates and remove brackets
                        const uniqueDoctors = [...new Set(testItems.map(item => 
                            item.doctorName ? item.doctorName.replace(/[()]/g, '') : ''
                        ))];
                        if (uniqueDoctors.length > 0) {
                %>
                <div class="info-value">Ref: <%= uniqueDoctors.join(', ') %></div>
                <% 
                        }
                    }
                }
                %>
                <% if (billing.marketingManagerId) { %>
                        <div class="info-value">Marketing_by: 
                        <% if (locals.marketingManager) { %>
                            <%= marketingManager.username %>
                        <% } else { %>
                            -
                        <% } %>
                        </div>
                <% } %>
            </td>
        </tr>
    </table>
    
    <% if (appointments.length > 0) { %>
    <div class="section-title text-center">Consultations</div>
    <table class="invoice-table">
        <thead>
            <tr>
                <th class="text-center" style="width: 5%;">S.No</th>
                <th class="text-center">Doctor</th>
                <th class="text-center">Service</th>
                <th class="text-end">Basic Amount</th>
            </tr>
        </thead>
        <tbody>
            <% appointments.forEach((item, index) => { %>
                <tr>
                    <td class="text-center"><%= index + 1 %></td>
                    <td><%= item.name.replace('Consultation with Dr. ', 'Dr. ') %></td>
                    <td>Medical Consultation</td>
                    <td class="text-right"><%- formatAmount(item.price) %></td>
                </tr>
            <% }) %>
        </tbody>
    </table>
    <% } %>
    
    <% if (cabins.length > 0) { %>
    <div class="section-title text-center">Accommodation</div>
    <table class="invoice-table">
        <thead>
            <tr>
                <th class="text-center" style="width: 5%;">S.No</th>
                <th class="text-center">Room Details</th>
                <th class="text-center">Service Type</th>
                <th class="text-end">Basic Amount</th>
            </tr>
        </thead>
        <tbody>
            <% cabins.forEach((item, index) => { %>
                <tr>
                    <td class="text-center"><%= index + 1 %></td>
                    <td><%= item.name %></td>
                    <td>Room Charges</td>
                    <td class="text-right"><%- formatAmount(item.price) %></td>
                </tr>
            <% }) %>
        </tbody>
    </table>
    <% } %>
    
    <% if (tests.length > 0) { %>
    <div class="section-title text-center">Laboratory Tests</div>
    <table class="invoice-table">
        <thead>
            <tr>
                <th class="text-center" style="width: 5%;">S.No</th>
                <th class="text-center">Test Name</th>
                <% if (!billing.billdelivaridate) { %>
                <th class="text-center">Delivery Date</th>
                <% } %>
                <th class="text-end">Basic Amount</th>
            </tr>
        </thead>
        <tbody>
            <% tests.forEach((item, index) => { %>
                <tr>
                    <td class="text-center"><%= index + 1 %></td>
                    <td><%= item.name %></td>
                    <% if (!billing.billdelivaridate) { %>
                        <td>
                            <% if (item.deliveryDate && item.deliveryDate.trim() !== '') { 
                                try {
                                    const deliveryDate = new Date(item.deliveryDate);
                                    if (!isNaN(deliveryDate.getTime())) { %>
                                        <%= formatDate(deliveryDate) %>
                                    <% } else { %>
                                        N/A
                                    <% }
                                } catch(e) { %>
                                    N/A
                                <% }
                               } else { %>
                                N/A
                            <% } %>
                        </td>
                    <% } %>
                    <td class="text-right"><%- formatAmount(item.price) %></td>
                </tr>
            <% }) %>
        </tbody>
    </table>
    
    <% 
    // Check if any tests have delivery options other than 'Not Collected'
    const specialDeliveryTests = tests.filter(item => 
        item.deliveryOption && item.deliveryOption !== 'Not Collected'
    );
    
    if (specialDeliveryTests.length > 0) { 
    %>
    <div style="margin-top: 15px; padding: 15px; background-color: #f8f9fa; border-left: 4px solid #4a6fdc; border-radius: 4px;">
        <h6 style="color: #4a6fdc; margin-bottom: 10px;"><i class="fas fa-info-circle me-2"></i>Special Delivery Information</h6>
        <ul style="margin-bottom: 0; padding-left: 20px;">
            <% specialDeliveryTests.forEach(test => { %>
                <li style="margin-bottom: 5px;">
                    <%= test.name %>: <%= test.deliveryOption %>
                    <% if (test.deliveryOption === 'Home Delivery' && test.deliveryDate && test.deliveryDate.trim() !== '') {
                        try {
                            const deliveryDate = new Date(test.deliveryDate);
                            if (!isNaN(deliveryDate.getTime())) { %>
                                - Expected delivery on <%= formatDate(deliveryDate) %>
                            <% }
                        } catch(e) { /* Ignore date errors */ }
                    } %>
                </li>
            <% }) %>
        </ul>
        <% if (specialDeliveryTests.some(test => test.deliveryOption === 'Email')) { %>
            <p style="margin-top: 10px; margin-bottom: 0;"><small>* Email results will be sent to <%= billing.Patient.email || 'the email on file' %></small></p>
        <% } %>
        <% if (specialDeliveryTests.some(test => test.deliveryOption === 'Home Delivery')) { %>
            <p style="margin-top: 5px; margin-bottom: 0;"><small>* Home delivery will be made to <%= billing.Patient.address || 'the address on file' %></small></p>
        <% } %>
    </div>
    <% } %>
    <% } %>
    
    <div class="invoice-total-section">
        <div class="invoice-status-seal">
            <div class="seal-container">
                <div class="seal-background <%= billing.status === 'paid' ? 'paid-seal' : 'unpaid-seal' %>">
                    <div class="seal-status <%= billing.status === 'paid' ? 'paid-text' : 'unpaid-text' %>">
                        <% if (billing.status === 'paid') { %>
                            PAID
                        <% } else { %>
                            DUE
                        <% } %>
                    </div>
                    <div class="seal-amount">
                        <% if (billing.status === 'paid') { %>
                            <span class="print-no-decimal">Tk <%= Math.round(parseFloat(billing.paidAmount)) %></span>
                            <span class="no-print">Tk <%= parseFloat(billing.paidAmount).toFixed(2) %></span>
                        <% } else { %>
                            <span class="print-no-decimal">Tk <%= Math.round(parseFloat(billing.dueAmount)) %></span>
                            <span class="no-print">Tk <%= parseFloat(billing.dueAmount).toFixed(2) %></span>
                        <% } %>
                    </div>
                </div>
            </div>
        </div>
        
        <div class="invoice-total">
            <div class="invoice-total-row">
                <div class="invoice-total-label">Subtotal:</div>
                <div class="invoice-total-value"><%- formatAmount(billing.totalAmount) %></div>
            </div>
            <div class="invoice-total-row">
                <div class="invoice-total-label">Discount (<%= parseFloat(billing.discountPercentage).toFixed(2) %>%):</div>
                <div class="invoice-total-value"><%- formatAmount(billing.discountAmount) %></div>
            </div>
            <div class="invoice-total-row invoice-grand-total">
                <div class="invoice-total-label">Total:</div>
                <div class="invoice-total-value"><%- formatAmount(billing.netPayable) %></div>
            </div>
            <div class="invoice-total-row">
                <div class="invoice-total-label">Amount Paid:</div>
                <div class="invoice-total-value"><%- formatAmount(billing.paidAmount) %></div>
            </div>
            <% if (parseFloat(billing.dueAmount) > 0) { %>
            <div class="invoice-total-row invoice-grand-total">
                <div class="invoice-total-label">Balance Due:</div>
                <div class="invoice-total-value"><%- formatAmount(billing.dueAmount) %></div>
            </div>
            <% } %>
            
            
        </div>
    </div>
    
    <!-- Signature Section -->
    <div class="signature-section">
        <div class="signature-box">
            <div class="signature-subtitle"><%- user.username %></div>
            <div class="signature-line"></div>
            <div class="signature-title">Prepared By</div>
        </div>
        <div class="signature-box">
            <div class="signature-subtitle">&nbsp</div>
            <div class="signature-line"></div>
            <div class="signature-title">Checked By</div>
        </div>
        <div class="signature-box">
            <div class="signature-subtitle">&nbsp</div>
            <div class="signature-line"></div>
            <div class="signature-title">Accounts</div>
        </div>
    </div>
    
    <div class="invoice-footer">
        Thank you for choosing our services | Printed on: <%= formatDate(new Date()) %> <%= new Date().toLocaleTimeString() %>
    </div>
</div>

<% if (billing.status !== 'paid') { %>
<div class="container no-print mb-4">
    <div class="card mt-4">
        <div class="card-header">
            <h5 class="mb-0">Process Payment</h5>
        </div>
        <div class="card-body">
            <form id="payment-form">
                <div class="row g-3 align-items-end">
                    <div class="col-md-2">
                        <label class="form-label">Payment Method</label>
                        <select class="form-select" id="payment-method" name="paymentMethod" required>
                            <option value="cash">Cash</option>
                            <option value="card">Card</option>
                            <option value="insurance">Insurance</option>
                        </select>
                    </div>
                    <div class="col-md-2">
                        <label class="form-label">Additional Discount %</label>
                        <div class="input-group">
                            <input type="number" class="form-control" id="second-discount-percent" name="secondDiscountPercentage" value="0" min="0" max="100" step="0.01">
                            <span class="input-group-text">%</span>
                        </div>
                    </div>
                    <div class="col-md-3">
                        <label class="form-label">Additional Discount Amount</label>
                        <div class="input-group">
                            <span class="input-group-text">Tk</span>
                            <input type="number" class="form-control" id="second-discount-amount" name="secondDiscountAmount" value="0" min="0" step="0.01">
                        </div>
                    </div>
                    <div class="col-md-3">
                        <label class="form-label">Amount</label>
                        <div class="input-group">
                            <span class="input-group-text">Tk </span>
                            <input type="number" class="form-control" id="payment-amount" name="paidAmount" value="<%= parseFloat(billing.dueAmount).toFixed(2) %>" max="<%= parseFloat(billing.dueAmount).toFixed(2) %>" min="0.01" step="0.01" required>
                        </div>
                    </div>
                    <div class="col-md-2">
                        <button type="submit" class="btn btn-primary w-100">
                            <i class="fas fa-check-circle me-1"></i> Process
                        </button>
                    </div>
                </div>

                <div class="row mt-3">
                    <div class="col-md-12">
                        <div class="alert alert-info mb-0">
                            <div class="d-flex justify-content-between align-items-center">
                                <span>Original Net Payable: </span>
                                <strong>Tk <span id="original-net-payable"><%= parseFloat(billing.netPayable).toFixed(2) %></span></strong>
                            </div>
                            <div class="d-flex justify-content-between align-items-center">
                                <span>Additional Discount: </span>
                                <strong>Tk <span id="second-discount-total">0.00</span></strong>
                            </div>
                            <div class="d-flex justify-content-between align-items-center">
                                <span>Final Net Payable: </span>
                                <strong>Tk <span id="final-net-payable"><%= parseFloat(billing.netPayable).toFixed(2) %></span></strong>
                            </div>
                        </div>
                    </div>
                </div>
            </form>
        </div>
    </div>
</div>

<script>
    // Auto-scaling function to ensure content fits on a single 6x8 inch page
    function scaleToFit() {
        if (window.matchMedia('print').matches) {
            const content = document.querySelector('.print-invoice');
            if (!content) return;

            // Remove any previous scaling for measurement
            document.documentElement.style.setProperty('--scale-factor', 1);

            // Get actual content height vs target container height
            const contentHeight = content.scrollHeight;
            const targetHeight = 7.5 * 96; // 7.5 inches in pixels

            // Calculate scale factor to fit content into target height
            let scaleFactor = Math.min(0.98, targetHeight / contentHeight);

            // Set minimum scale to ensure readability
            scaleFactor = Math.max(scaleFactor, 0.8);

            console.log('Content height:', contentHeight, 'Target height:', targetHeight, 'Scale:', scaleFactor);

            // Apply the scale factor as a CSS variable
            document.documentElement.style.setProperty('--scale-factor', scaleFactor);
        }
    }
    
    // Run before printing and on load to prepare
    window.addEventListener('beforeprint', scaleToFit);
    window.addEventListener('load', function() {
        // Dynamically add ultra-compact styles if needed
        const style = document.createElement('style');
        style.textContent = `
            @media print {
                .ultra-compact .invoice-table td, .ultra-compact .invoice-table th {
                    padding: 0px 2px !important;
                    line-height: 1.1 !important;
                }
                .ultra-compact .seal-container {
                    width: 70px !important;
                    height: 70px !important;
                }
            }
        `;
        document.head.appendChild(style);
    });
    
    // For payment form
    $(document).ready(function() {
        function updateSecondDiscount() {
            const originalNetPayable = parseFloat($('#original-net-payable').text());
            const secondDiscountPercent = parseFloat($('#second-discount-percent').val()) || 0;
            const secondDiscountAmount = parseFloat($('#second-discount-amount').val()) || 0;
            
            // Calculate total second discount (either from percentage or direct amount)
            let totalSecondDiscount;
            if (secondDiscountAmount > 0) {
                totalSecondDiscount = secondDiscountAmount;
                // Update percentage if amount is manually entered
                const calculatedPercent = (secondDiscountAmount / originalNetPayable * 100).toFixed(2);
                $('#second-discount-percent').val(calculatedPercent);
            } else {
                totalSecondDiscount = (originalNetPayable * secondDiscountPercent / 100);
                $('#second-discount-amount').val(totalSecondDiscount.toFixed(2));
            }

            // Ensure discount doesn't exceed the net payable
            if (totalSecondDiscount > originalNetPayable) {
                totalSecondDiscount = originalNetPayable;
                $('#second-discount-amount').val(totalSecondDiscount.toFixed(2));
                $('#second-discount-percent').val('100');
            }

            const finalNetPayable = originalNetPayable - totalSecondDiscount;

            // Update display values
            $('#second-discount-total').text(totalSecondDiscount.toFixed(2));
            $('#final-net-payable').text(finalNetPayable.toFixed(2));
            $('#payment-amount').attr('max', finalNetPayable.toFixed(2));
            $('#payment-amount').val(finalNetPayable.toFixed(2));
        }

        // Add event listeners for second discount inputs
        $('#second-discount-percent, #second-discount-amount').on('input', function() {
            updateSecondDiscount();
        });

        $('#payment-form').on('submit', function(e) {
            e.preventDefault();
            
            const paymentData = {
                paidAmount: $('#payment-amount').val(),
                paymentMethod: $('#payment-method').val(),
                secondDiscountPercentage: $('#second-discount-percent').val(),
                secondDiscountAmount: $('#second-discount-amount').val()
            };
            
            $.ajax({
                url: '/billing/<%= billing.id %>/payment',
                type: 'PUT',
                data: paymentData,
                success: function(response) {
                    location.reload();
                },
                error: function(error) {
                    alert('Error processing payment. Please try again.');
                    console.error(error);
                }
            });
        });
    });
</script>
<% } %>

<%- include('partials/footer') %>