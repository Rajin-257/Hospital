<%- include('partials/header') %>
<%- include('partials/navbar') %>

<div class="container-fluid py-4">
    <div class="card mb-4">
        <div class="card-header d-flex justify-content-between align-items-center">
            <h5 class="mb-0"><i class="fas fa-chart-pie me-2"></i>Marketing Commission Summary</h5>
            <a href="/marketing-commissions" class="btn btn-sm btn-primary">
                <i class="fas fa-list me-1"></i> View Detailed Report
            </a>
        </div>
        <div class="card-body">
            <form id="filter-form" class="mb-4">
                <div class="row g-3">
                    <div class="col-md-3">
                        <label class="form-label">Status</label>
                        <select class="form-select" name="status">
                            <option value="">All</option>
                            <option value="pending" <%= query.status === 'pending' ? 'selected' : '' %>>Pending</option>
                            <option value="paid" <%= query.status === 'paid' ? 'selected' : '' %>>Paid</option>
                        </select>
                    </div>
                    <div class="col-md-3">
                        <label class="form-label">Start Date</label>
                        <input type="date" class="form-control" name="startDate" value="<%= query.startDate || '' %>">
                    </div>
                    <div class="col-md-3">
                        <label class="form-label">End Date</label>
                        <input type="date" class="form-control" name="endDate" value="<%= query.endDate || '' %>">
                    </div>
                    <div class="col-md-3 d-flex align-items-end">
                        <button type="submit" class="btn btn-primary me-2">
                            <i class="fas fa-filter me-1"></i> Filter
                        </button>
                        <button type="button" id="clear-filters" class="btn btn-outline-secondary">
                            <i class="fas fa-times me-1"></i> Clear
                        </button>
                    </div>
                </div>
            </form>
            
            <% if (summary.length === 0) { %>
                <div class="alert alert-info">No commission records found.</div>
            <% } else { %>
                <!-- Hidden inputs to store summary data for charts -->
                <div id="summary-data" style="display:none">
                    <% summary.forEach(function(item, index) { %>
                        <input type="hidden" class="manager-name" value="<%= item.MarketingManager.username %>">
                        <input type="hidden" class="commission-amount" value="<%= parseFloat(item.totalAmount) || 0 %>">
                    <% }); %>
                </div>
            
                <div class="table-responsive">
                    <table class="table table-striped table-hover">
                        <thead>
                            <tr>
                                <th>Marketing Manager</th>
                                <th>Email</th>
                                <th>Total Billings</th>
                                <th>Avg. Commission %</th>
                                <th>Total Amount</th>
                                <th>Action</th>
                            </tr>
                        </thead>
                        <tbody>
                            <% summary.forEach(item => { %>
                                <tr>
                                    <td><%= item.MarketingManager.username %></td>
                                    <td><%= item.MarketingManager.email || 'N/A' %></td>
                                    <td><%= item.totalBillings || 0 %></td>
                                    <td><%= (parseFloat(item.avgCommissionPercentage) || 0).toFixed(2) %>%</td>
                                    <td class="text-end">Tk <%= Math.round(parseFloat(item.totalAmount) || 0) %></td>
                                    <td>
                                        <a href="/marketing-commissions?marketingManagerId=<%= item.marketingManagerId %>" class="btn btn-sm btn-outline-primary">
                                            <i class="fas fa-eye me-1"></i> View Details
                                        </a>
                                    </td>
                                </tr>
                            <% }); %>
                        </tbody>
                        <tfoot>
                            <tr class="table-light">
                                <td colspan="4" class="text-end fw-bold">Total:</td>
                                <td class="text-end fw-bold">Tk <%= Math.round(summary.reduce((sum, item) => sum + (parseFloat(item.totalAmount) || 0), 0)) %></td>
                                <td></td>
                            </tr>
                        </tfoot>
                    </table>
                </div>
                
                <!-- Summary Charts -->
                <div class="row mt-4">
                    <div class="col-md-6">
                        <div class="card">
                            <div class="card-header">
                                <h6 class="mb-0">Commission Distribution by Marketing Manager</h6>
                            </div>
                            <div class="card-body">
                                <canvas id="commissionPieChart" height="250"></canvas>
                            </div>
                        </div>
                    </div>
                    <div class="col-md-6">
                        <div class="card">
                            <div class="card-header">
                                <h6 class="mb-0">Commission Amounts by Marketing Manager</h6>
                            </div>
                            <div class="card-body">
                                <canvas id="commissionBarChart" height="250"></canvas>
                            </div>
                        </div>
                    </div>
                </div>
            <% } %>
        </div>
    </div>
</div>

<%- include('partials/footer') %>

<script>
    $(document).ready(function() {
        // Clear filters
        $('#clear-filters').on('click', function() {
            $('select[name="status"]').val('');
            $('input[name="startDate"]').val('');
            $('input[name="endDate"]').val('');
            $('#filter-form').submit();
        });
        
        // Read data from hidden fields for charts
        const managers = [];
        const amounts = [];
        
        $('.manager-name').each(function(index) {
            managers.push($(this).val());
        });
        
        $('.commission-amount').each(function(index) {
            // Ensure we have a valid numeric value
            const amount = parseFloat($(this).val()) || 0;
            amounts.push(amount);
        });
        
        if (managers.length > 0 && amounts.length > 0) {
            const colors = [
                '#4e73df', '#1cc88a', '#36b9cc', '#f6c23e', '#e74a3b',
                '#6f42c1', '#5a5c69', '#858796', '#76A7FA', '#d4a6ff'
            ];
            
            // Pie Chart for Commission Distribution
            const pieCtx = document.getElementById('commissionPieChart');
            new Chart(pieCtx, {
                type: 'pie',
                data: {
                    labels: managers,
                    datasets: [{
                        data: amounts,
                        backgroundColor: colors.slice(0, managers.length),
                        hoverBackgroundColor: colors.slice(0, managers.length).map(color => pSBC(0.2, color)), // Lighten on hover
                        hoverBorderColor: 'rgba(234, 236, 244, 1)',
                    }],
                },
                options: {
                    maintainAspectRatio: false,
                    tooltips: {
                        callbacks: {
                            label: function(tooltipItem, data) {
                                const label = data.labels[tooltipItem.index];
                                const value = data.datasets[0].data[tooltipItem.index] || 0;
                                return `${label}: Tk ${Math.round(value)}`;
                            }
                        }
                    },
                    legend: {
                        position: 'right',
                        labels: {
                            boxWidth: 12
                        }
                    },
                    cutoutPercentage: 40,
                },
            });
            
            // Bar Chart for Commission Amounts
            const barCtx = document.getElementById('commissionBarChart');
            new Chart(barCtx, {
                type: 'bar',
                data: {
                    labels: managers,
                    datasets: [{
                        label: 'Commission Amount (Tk)',
                        data: amounts,
                        backgroundColor: colors[0],
                        hoverBackgroundColor: pSBC(0.2, colors[0]), // Lighten on hover
                        borderWidth: 1
                    }]
                },
                options: {
                    maintainAspectRatio: false,
                    scales: {
                        yAxes: [{
                            ticks: {
                                beginAtZero: true,
                                callback: function(value) {
                                    return 'Tk ' + (value || 0);
                                }
                            }
                        }]
                    }
                }
            });
        }
        
        // Helper function to lighten/darken colors
        function pSBC(p,c0,c1,l) {
            let r,g,b,P,f,t,h,a=typeof(c1)=="string";
            if(typeof(p)!="number"||p<-1||p>1||typeof(c0)!="string"||(c0[0]!='r'&&c0[0]!='#')||(c1&&!a))return null;
            h=c0.length>9||c0[0]!="#"?c0.indexOf("rgb")==0?3:4:(c0=c0.match(/\w+/)[0]).length;
            c0=(h>3?c0:h==3?c0.replace(/(.)/g,"$1$1"):c0)+"";
            P=p<0,f=P?p*-1:p,t=P?0:255*f,P=P?255:0;
            if(h==3){
                r=Math.round(parseInt(c0.substring(0,2),16)*f+t);
                g=Math.round(parseInt(c0.substring(2,4),16)*f+t);
                b=Math.round(parseInt(c0.substring(4,6),16)*f+t);
                return"rgb("+r+","+g+","+b+")";
            }
            return"#"+(0x1000000+Math.round(parseInt(c0.substring(1,3),16)*f+t)*0x10000+Math.round(parseInt(c0.substring(3,5),16)*f+t)*0x100+Math.round(parseInt(c0.substring(5,7),16)*f+t)).toString(16).slice(1);
        }
    });
</script> 